var arr = [10,20,30,40,50];
undefined
typeof arr;
'object'
arr instanceof Array
true
typeof Array
'function'
var arr2 = new Array(10);
undefined
arr2;
(10) [empty × 10]
arr2[0]
undefined
var c = Array.of(10,20,30,40,50);
undefined
c;
(5) [10, 20, 30, 40, 50]
Array.from("Amit")
(4) ['A', 'm', 'i', 't']0: "A"1: "m"2: "i"3: "t"length: 4[[Prototype]]: Array(0)
Array.from(12345);
[]
var f = Array.from(arr)
undefined
f;
(5) [10, 20, 30, 40, 50]
f==arr;
false
arr;
(5) [10, 20, 30, 40, 50]
Array.isArray(arr);
true
arr;
(5) [10, 20, 30, 40, 50]0: 101: 202: 303: 404: 50length: 5[[Prototype]]: Array(0)
f;
(5) [10, 20, 30, 40, 50]
arr + f;
'10,20,30,40,5010,20,30,40,50'
var d = arr.concat(f)
undefined
d;
(10) [10, 20, 30, 40, 50, 10, 20, 30, 40, 50]
arr.copyWithin(1,1,3);
(5) [10, 20, 30, 40, 50]0: 101: 202: 303: 404: 50length: 5[[Prototype]]: Array(0)
arr;
(5) [10, 20, 30, 40, 50]0: 101: 402: 503: 404: 50length: 5[[Prototype]]: Array(0)
arr.copyWithin(1,3,4);
(5) [10, 40, 30, 40, 50]
arr.copyWithin(1,3,5);
(5) [10, 40, 50, 40, 50]
arr;
(5) [10, 40, 50, 40, 50]
f;
(5) [10, 20, 30, 40, 50]
var b = [...arr,...f]
undefined
b;
(10) [10, 40, 50, 40, 50, 10, 20, 30, 40, 50]
arr.copyWithin(1,3,7);
(5) [10, 40, 50, 40, 50]
var arr = [10,20,30,10,20,10,40,90,10];
undefined
var subArray = arr.filter(element=>element==10);
undefined
subArray.length
4
var sb = arr.filter(element=>true);
undefined
sb;
(9) [10, 20, 30, 10, 20, 10, 40, 90, 10]
arr;
(9) [10, 20, 30, 10, 20, 10, 40, 90, 10]
sb == arr;
false
arr;
(9) [10, 20, 30, 10, 20, 10, 40, 90, 10]
var result = arr.map(element=>element + element * 0.10);
undefined
result;
(9) [11, 22, 33, 11, 22, 11, 44, 99, 11]0: 111: 222: 333: 114: 225: 116: 447: 998: 11length: 9[[Prototype]]: Array(0)
var prices = [9000,3333.22,5555.32];
undefined
var p = 90043.55;
undefined
p.toLocaleString('hi-IN')
'90,043.55'
p.toLocaleString('fr-FR')
'90 043,55'
p.toString();
'90043.55'
prices.map(price=>`Rs ${price.toLocaleString('hi-IN')}`)
(3) ['Rs 9,000', 'Rs 3,333.22', 'Rs 5,555.32']
var formattedPrices = prices.map(price=>`Rs ${price.toLocaleString('hi-IN')}`)
undefined
formattedPrices;
(3) ['Rs 9,000', 'Rs 3,333.22', 'Rs 5,555.32']
var cloneArray = prices.map(price=>price);
undefined
cloneArray
(3) [9000, 3333.22, 5555.32]
prices;
(3) [9000, 3333.22, 5555.32]
formattedPrices
(3) ['Rs 9,000', 'Rs 3,333.22', 'Rs 5,555.32']
prices;
(3) [9000, 3333.22, 5555.32]
formattedPrices
(3) ['Rs 9,000', 'Rs 3,333.22', 'Rs 5,555.32']
prices.sort()
(3) [3333.22, 5555.32, 9000]
prices.push(1999);
4
prices.push(2000);
5
prices.push(2111);
6
prices.push(2011);
7
prices;
(7) [3333.22, 5555.32, 9000, 1999, 2000, 2111, 2011]
prices.sort();
(7) [1999, 2000, 2011, 2111, 3333.22, 5555.32, 9000]
prices.push(2020);
8
prices.push(3322)
9
prices.push(21);
10
prices.sort();
(10) [1999, 2000, 2011, 2020, 21, 2111, 3322, 3333.22, 5555.32, 9000]0: 19991: 20002: 20113: 20204: 215: 21116: 33227: 3333.228: 5555.329: 9000length: 10[[Prototype]]: Array(0)
prices.sort((first, second)=>first - second);
(10) [21, 1999, 2000, 2011, 2020, 2111, 3322, 3333.22, 5555.32, 9000]
prices;
(10) [21, 1999, 2000, 2011, 2020, 2111, 3322, 3333.22, 5555.32, 9000]
prices.sort((first, second)=>second - first);
(10) [9000, 5555.32, 3333.22, 3322, 2111, 2020, 2011, 2000, 1999, 21]
prices;
(10) [9000, 5555.32, 3333.22, 3322, 2111, 2020, 2011, 2000, 1999, 21]
var names = ["anil","ram","shyam","amit"];
undefined
"anil" - "ram"
NaN
"anil".localeCompare("ram")
-1
"ram".localeCompare("anil")
1
"ram".localeCompare("ram")
0
names.sort((first, second)=>first.localeCompare(second));
(4) ['amit', 'anil', 'ram', 'shyam']
names.sort((first, second)=>second.localeCompare(first));
(4) ['shyam', 'ram', 'anil', 'amit']
